[tool.poetry]
name = "default_bot"
version = "0.1.0"
description = ""
authors = ["maxim.maltisov <m.maltisov@agima.ru>"]
readme = "README.md"
packages = [{ include = "bot", from = "src" }]

[tool.poetry.dependencies]
python = "^3.12"
aiogram = "^3.20.0.post0"
apscheduler = "^3.11.0"
pydantic-settings = "^2.9.1"
sqlalchemy = "^2.0.41"
mypy = "^1.14.1"
pre-commit = "^4.2.0"
ruff = "^0.11.13"
watchfiles = "^1.0.5"
asyncpg = "^0.30.0"
alembic = "1.15.1"
fast-depends = "^2.4.12"
yookassa = "^3.5.0"
fastapi = "^0.115.12"
uvicorn = "^0.34.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 100
exclude = [
    "tests",
    "alembic",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".pytest_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migration",
    "migrations",
    "*.j2",
    "*.txt",
]

[tool.ruff.lint]
select = [
    "F", "E", "W", "C90",
    "C", "ASYNC", "PLR", "N",
    "UP", "B", "A", "T20",
    "Q", "PTH", "ARG", "RUF"
]
preview = true
ignore = ["T201","RUF003", "RUF002","RUF001","A005"]

extend-select = ["D201", "D202", "PLR6301"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.validator"]
staticmethod-decorators = ["staticmethod"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
lines-after-imports = 2
force-single-line = true

[tool.mypy]
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
